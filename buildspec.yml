version: 0.2

env:
  #
  # List of secrets (how to create : https://wiki.concur.com/confluence/display/CSS/Secret+Management+-+Release+Pipeline)
  #

  #
  # List of variables
  #
  variables:
    GIT_BRANCH: "FizzBuzz1" # to be computed in pre-build phase
    GITHUB_CLI_VERSION: "2.7.0"
    GITHUB_REPOSITORY: "docker-k8-spring"
    GITHUB_API_TOKEN :  "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"



phases:
  install:
    runtime-versions:
      java: corretto8
      docker: 19
    commands:
      # Install GitHub CLI
      - rpm -i https://github.com/cli/cli/releases/download/v${GITHUB_CLI_VERSION}/gh_${GITHUB_CLI_VERSION}_linux_386.rpm
  pre_build:
    on-failure: ABORT
    commands:
      # Connects to GitHub
      - echo ${GITHUB_API_TOKEN} | gh auth login --hostname github.concur.com --with-token
      # Pull shared scripts
      - gh auth setup-git
      #- gh repo clone eden/secure-pipeline-scripts
      # Allows execution of embedded pipeline scripts and functions
      - chmod +x -R ./scripts/*
      #- chmod +x -R ./secure-pipeline-scripts/*
      # Set WORKDIR
      - WORKDIR=$(pwd)
      # Identify the current branch name
      - GIT_BRANCH="FizzBuzz1"
      - echo ">>> Branch -> ${GIT_BRANCH}"

  build:
    commands:
      - echo Build started on `date`

  post_build:
    commands:
      - echo Build completed on `date`

artifacts:
  files:
    - /build/libs/FizzBuzz1-1.0-SNAPSHOT.jar

  discard-paths: yes
  #version: 0.2
#
#
#
#
#phases:
#  install:
#    runtime-versions:
#      java: corretto11
#      docker: 19
#
#
#
#  build:
#    commands:
##      - sh ./scripts/pipeline/function/downloadCaCerts.sh
#      - ./scripts/pipeline/pipeline.sh
#
#  post_build:
#    commands:
#    #
#    # Zip up your required files for deployment
#    #
#      - ZIP_FILENAME=$(echo $CODEBUILD_WEBHOOK_TRIGGER | cut -d '/' -f 2)-${CODEBUILD_BUILD_NUMBER}-deployment.zip
#      - zip ${ZIP_FILENAME} -r .
#    #
#    # Upload your deployment.zip to the build S3 bucket
#    #
#      - ZIP_UPLOAD_PATH="${PROMOTIONS_BUCKET}/${GITHUB_REPOSITORY}/${ZIP_FILENAME}"
#      - aws s3 cp ${ZIP_FILENAME} s3://${ZIP_UPLOAD_PATH}
#    #
#    # Call the Supply-chain CLI with your zipfile as the target to initiate the deployment
